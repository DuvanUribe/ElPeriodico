type Mutation{
    createQuality(inputQuality : QualityCreate) : Quality
    updateQuality(inputQuality : QualityUpdate) : Quality
    deleteQuality(id:Int):String
    createPerson(inputPerson : PersonCreate) : Person
    updatePerson(inputPerson : PersonUpdate) : Person
    deletePerson(id:Int):String
    createRelationNews(id1: Int, id2: Int):String
    deleteRelationNews(id1: Int, id2: Int):String
    createNews(inputNews : NewsCreate) : News
    updateNews(inputNews : NewsUpdate) : News
    deleteNews(id:Int):String
    createInterview(inputInterview : InterviewCreate) : Interview
    updateInterview(inputInterview : InterviewUpdate) : Interview
    deleteInterview(id:Int):String
}
input QualityCreate {
    quialityType: String
}

input QualityUpdate {
    id: ID
    quialityType: String
}
input PersonCreate {
    name: String
    addres: String
    phone: Int
    birthday: String
}

input PersonUpdate {
    id: ID
    name: String
    addres: String
    phone: Int
    birthday: String

}

input NewsCreate {
    date:String
    hour:String
    holder: String
    body:String
}

input NewsUpdate {
    id: ID
    date:String
    hour:String
    holder: String
    body:String
}

input  InterviewCreate {
    summary : String
    idNews:Int
    idInvolved:Int
    idJournalist:Int
    idQuality:Int
}
input  InterviewUpdate {
    id: ID
    summary : String
    idNews:Int
    idInvolved:Int
    idJournalist:Int
    idQuality:Int
}